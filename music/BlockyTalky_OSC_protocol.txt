BlockyTalky OSC Protocol
========================

I. Preface
	The music blocks in BlockyTalky function by constructing OSC messages with different target addresses and message contents. These messages are received by maestro.ck, a ChucK module, which then performs computations based on those messages according to this protocol and sends more messages to be received by a sound-driving module, mastersound.pd. This document describes first the protocol used between BlockyTalky and maestro.ck (from BlockyTalky to ChucK), followed by the protocol used between maestro.ck and mastersound.pd (from ChucK to PureData).
	
II. Messaging Protocol between BlockyTalky and the ChucK Maestro
	A. Playing Notes
		1. /lpc/maestro/play_on_beat_with (if*128)fi
			Message containing 128 notes, where each note is identified by an integer (i) and a float (f). Such a construct is considered a "phrase," and will be henceforth named thusly in this document. A phrase may contain empty notes; such notes take no time to play and produce no sound, and can be specified with a pitch of -1 and a duration of 0. This message is intended to be used to tell the maestro machine to play a sequence of notes immediately.
			This message also contains a float specifying a "beat alignment fraction" and an int (1-8) specifying the voice to be used to play the notes in the phrase. 0 can be passed as he beat alignment fraction, in which case no beat alignment will occur and the phase will play without any delay.
			
		2. /lpc/maestro/loop_on_beat_with (if*128)fi
			As above, but the specified phrase will loop back on itself and continue playing until it is stopped by a stop_playing message sent to the appropriate voice.
			
		3. /lpc/maestro/stop_playing_on_beat fi
			Stops the specified voice (i) from playing anything, optionally aligned to a particular beat or fraction thereof (f). As before, beat alignment can be disabled by passing 0 as the beat fraction.
			
		4. /lpc/maestro/change_voice (if*128)fi
			Stops playing anything with the specified voice and immediately starts playing the new phrase with the specified voice.
	
	B. Controlling Sound
		1. /lpc/maestro/tempo f
			The real number argument specifies the user's desired song tempo in beats per minute. Due to the nature of the ChucK module, changing this setting while a loop is playing will break any on-beat synchronization with new phrases played after the tempo change.
			
		2. TODO: The rest of this section.

III. Messaging Protocol between the ChucK Maestro and PD Sound Driver
	A. Playing Notes
		1. /lpc/sound/voice1 sif NOT IMPLEMENTED
			Message specifying an instrument to use (s) to play one note by MIDI pitch (i) and real number duration in seconds (f).
			
		2. /lpc/sound/voice2 sif NOT IMPLEMENTED
			There are 8 voices, labeled voice1 - voice8.

		3-8. /lpc/sound/voiceN sif NOT IMPLEMENTED
			See 2.
			
	B. Controlling Sound
		1. /lpc/sound/volume f NOT IMPLEMENTED
			Message specifying the master volume multiplier as a real number between 0 and 1.
			
		2. /lpc/sound/voice1/volume NOT IMPLEMENTED
			Message specifying the desired volume of a particular voice as a real number between 0 and 1.
			
		3-9. /lpc/sound/voiceN/volume NOT IMPLEMENTED
			See 2.
	